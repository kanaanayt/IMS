@page "/sic"

@inject IViewInventoriesByNameService ViewInventoriesByNameService
@inject IGetInventoryByIdService GetInventoryByIdService

<SearchInventoryComponent SearchEventCallback="SearchEventCallbackHandler" />

@if (_inventories.Count > 0)
{
    <div class="form-group custom-div">
        <ul>
            @foreach (var inv in _inventories)
            {
                <li @key=inv.InventoryId
                    @onclick="@( async () => await OnSelectInventory(inv) )">
                    @inv.InventoryName
                </li>
            }
        </ul>
    </div>
}

<select>
    @foreach (var inv in _inventories)
    {
        <option value=@inv.InventoryName>@inv.InventoryName</option>
    }
</select>


@code {
    private List<Inventory> _inventories = new();

    private async Task SearchEventCallbackHandler(string search)
    {
        this._inventories = (await ViewInventoriesByNameService.ExecuteAsync(search))
                            .ToList();
    }

    [Parameter]
    public EventCallback<Inventory> ClickEventCallback { get; set; }

    private async Task OnSelectInventory(Inventory inventory)
    {
        await ClickEventCallback.InvokeAsync(inventory);
        _inventories.Clear();
    }
}
