@inject NavigationManager NavigationManager
@inject IEditProductItemService EditProductItemService
@inject IAddProductItemService AddProductItemService

<EditForm Model="productPopulated"
          OnValidSubmit="SubmitHandler">

    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="prodName">Product Name</label>
        <InputText id="prodName" 
                   @bind-Value="@productPopulated.ProductName"
                   class="form-control" />
    </div>

    <div class="form-group">
        <label for="prodQuant">Quantity</label>
        <InputNumber id="prodQuant" 
                     @bind-Value="@productPopulated.Quantity"
                     class="form-control" />
    </div>

    <div class="form-group">
        <label for="prodPrice">Price</label>
        <InputNumber id="prodPrice"
                     @bind-Value="@productPopulated.Price"
                     class="form-control" />
    </div>
    
    <br />
    
    <div class="form-group">
        <label for="inventory">
            <h5>Inventory Items</h5>
        </label>
        <div class="card">
            <div class="card-body">
                <ProductInventoriesComponent ProductInventoriesPopulated="@productPopulated" 
                                               operation="@operation" />
            </div>
        </div>
    </div>

    <div class="form-group">
        <button type="submit"
                class="btn btn-primary">Submit</button>
        <button type="button"
                class="btn btn-secondary"
                @onclick=Redirect>Cancel</button>
    </div>

</EditForm>


@code {
    [Parameter]
    public Product productPopulated { get; set; } = new();

    [Parameter]
    public string operation { get; set; } = String.Empty;

    private async Task SubmitHandler()
    {
        if (operation.Equals("add"))
            await AddProductItemService.ExecuteAsync(productPopulated);
        
        else
            await EditProductItemService.ExecuteAsync(productPopulated);
        
        Redirect();
    }

    public void Redirect()
    {
        NavigationManager.NavigateTo("products");
    }
}
